{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "keyVaultNm": {
      "value": null,
      "type": "string",
      "metadata": {
        "description": "Key vault name, contains keys for logging into the AD"
      }
    },

    "keyVaultRg": {
      "value": null,
      "type": "string",
      "metadata": {
        "description": "Resource Group for the above Key vault"
      }
    },

    "settings": {
      "value": null,
      "type": "object",
      "metadata": {
        "description": "Object Containing all of the common settings for AD, api versions, VM Sizing, etc. See the parameters-XXX.json."
      }
    },
    "templateUrl": {
      "value": null,
      "type": "string",
      "metadata": {
        "description": "Base URL where the JPDC Templates are located"
      }
    }
  },

  "variables": {
  
    "availabilitySetName": "[concat('jpdc-avail', parameters('settings').locationAbbrv)]",
    "keyVault": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultRg'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultNm'))]",
    "devUrl": "[concat(parameters('templateUrl'), '/dev.json')]",
	"policyUrl": "[concat(parameters('templateUrl'), '/policy.json')]",
	"backupUrl": "[concat(parameters('templateUrl'), '/backup.json')]",
	"resourcegrp": "[concat('jpdc','-arm', parameters('settings').locationAbbrv, '-rg')]",
	"devNodePre": "[concat('jpdc-', toLower(parameters('settings').stage), parameters('settings').locationAbbrv)]",
    "appGatewayUrl": "[concat(parameters('templateUrl'), '/appGateway.json')]",

    "nodePrefix": "[concat('jpdc-', parameters('settings').stage, parameters('settings').locationAbbrv)]",
    "nodeInfo": 
    {
      "appGateway":  "[concat(variables('nodePrefix'), '-app-gateway')]",
      "appGatewayPool": "[concat(variables('nodePrefix'), '-be-pool')]"
    }
  },
  "resources": [
    {
      "comments": "Call the common template to prepare the AD join command and OMS Custom Data string",
      "name": "devNodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('settings').apiVersions.deploy]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('devUrl')]",
          "contentVersion": "1.0.0.0"
        },

        "parameters": {
          "devDisksUrl": {
            "value": "[concat(parameters('templateUrl'), '/devDisks.json')]"
          },
          "nodeName": {
            "value": {
              "name": "[concat(variables('devNodePre'))]"
              
            }
          },
		  "adminUsername": {
      "value": "[parameters('adminUsername')]"
    },
		  "adminPassword": {
      "value": "[parameters('adminPassword')]"
    },

          "settings": {
            "value": "[parameters('settings')]"
          },
		  "availabilitySetName": {
            "value": "[variables('availabilitySetName')]"
          }
        }
      }
    },
    {
        "comments": "Availabity set that contains the nodes, do not want both down at the same time.",
        "type": "Microsoft.Compute/availabilitySets",
        "sku": {
          "name": "Aligned"
        },
        "name": "[variables('availabilitySetName')]",
        "apiVersion": "[parameters('settings').apiVersions.compute]",
        "location": "[resourceGroup().location]",
        "properties": {
          "platformUpdateDomainCount": 5,
          "platformFaultDomainCount": 2
        }
      },
    {
      "name": "JpdcAppGateway",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('settings').apiVersions.deploy]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'devNodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appGatewayUrl')]",
          "contentVersion": "1.0.0.0"
        },

        "parameters": {
          "nodeInfo": {
            "value": "[variables('nodeInfo')]"
          },

          "webAppGateCert": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVault')]"
               },
              "secretName": "ahm-app-gw-ssl"
            }
          },

          "settings": {
            "value": "[parameters('settings')]"
          }
        }
      }
    },
	{
      "name": "devNode1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('settings').apiVersions.deploy]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'devNodes')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('devUrl')]",
          "contentVersion": "1.0.0.0"
        },

        "parameters": {
          "nodeInfo": 
          {
            "value": {
              "info": "[variables('nodeInfo')]",
              "name": "[concat(variables('nodePrefix'), copyIndex(1))]",
              "number": "[copyIndex()]"
            }
          },

          "settings": {
            "value": "[parameters('settings')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetName')]"
          },

          "sshKey": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVault')]"
              },
              "secretName": "jpdc-ssh-key"
            }
          },
          "sshPub": {
            "reference": {
              "keyVault": {
                "id": "[variables('keyVault')]"
              },
              "secretName": "jpdc-ssh-pub"
            }
          }
        }
      }
    }
    

  ]
}
